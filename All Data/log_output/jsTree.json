[
                { "id": "0", "parent": "#", "text": "public class TextReader {" },
                { "id": "1", "parent": "0", "text": "  " },
                { "id": "2", "parent": "0", "text": "    public static void main(String[] args) throws IOException {" },
                { "id": "3", "parent": "0", "text": "        " },
                { "id": "4", "parent": "0", "text": "       String adresaSlozkyABC;" },
                { "id": "5", "parent": "0", "text": "       String[] nazvySouboruABC;" },
                { "id": "6", "parent": "0", "text": "       " },
                { "id": "7", "parent": "0", "text": "       String adresaSlozkyData;" },
                { "id": "8", "parent": "0", "text": "       String nazevSouboruData;" },
                { "id": "9", "parent": "0", "text": "       " },
                { "id": "10", "parent": "0", "text": "       String adresaProjektu;" },
                { "id": "11", "parent": "0", "text": "       " },
                { "id": "12", "parent": "0", "text": "       pathOfProject cestaKProjektu = new pathOfProject();" },
                { "id": "13", "parent": "12", "text": "    " },
                { "id": "14", "parent": "12", "text": "    String adresaProjektu;" },
                { "id": "15", "parent": "12", "text": "    " },
                { "id": "16", "parent": "12", "text": "    " },
                { "id": "17", "parent": "12", "text": "    public pathOfProject(){" },
                { "id": "18", "parent": "12", "text": "        " },
                { "id": "19", "parent": "12", "text": "        File currentDirFile = new File('.');" },
                { "id": "20", "parent": "12", "text": "        String helper;" },
                { "id": "21", "parent": "12", "text": "        String helper2;" },
                { "id": "22", "parent": "12", "text": "        " },
                { "id": "23", "parent": "12", "text": "        int lastSlash;" },
                { "id": "24", "parent": "12", "text": "                " },
                { "id": "25", "parent": "12", "text": "        helper = currentDirFile.getAbsolutePath();" },
                { "id": "26", "parent": "12", "text": "      " },
                { "id": "27", "parent": "12", "text": "        lastSlash = helper.lastIndexOf('\\');" },
                { "id": "28", "parent": "12", "text": "        helper2 = helper.substring(0, lastSlash);" },
                { "id": "29", "parent": "12", "text": "        " },
                { "id": "30", "parent": "12", "text": "        lastSlash = helper2.lastIndexOf('\\');" },
                { "id": "31", "parent": "12", "text": "        adresaProjektu = helper2.substring(0, lastSlash);" },
                { "id": "32", "parent": "12", "text": "        " },
                { "id": "33", "parent": "12", "text": "    }" },
                { "id": "34", "parent": "12", "text": "    " },
                { "id": "35", "parent": "12", "text": "    public String getAdresaProjektu(){" },
                { "id": "36", "parent": "12", "text": "        return(adresaProjektu);" },
                { "id": "37", "parent": "12", "text": "    }" },
                { "id": "38", "parent": "12", "text": "    " },
                { "id": "39", "parent": "0", "text": "       adresaProjektu = cestaKProjektu.getAdresaProjektu();" },
                { "id": "40", "parent": "39", "text": "    public String getAdresaProjektu(){" },
                { "id": "41", "parent": "39", "text": "        return(adresaProjektu);" },
                { "id": "42", "parent": "39", "text": "    }" },
                { "id": "43", "parent": "39", "text": "    " },
                { "id": "44", "parent": "0", "text": "       " },
                { "id": "45", "parent": "0", "text": "       //data pismen abecedy" },
                { "id": "46", "parent": "0", "text": "       ArrayList<ArrayList<HashMap<String, Integer>>> MapaPismenAbeceda = new ArrayList<ArrayList<HashMap<String, Integer>>>();" },
                { "id": "47", "parent": "0", "text": "       " },
                { "id": "48", "parent": "0", "text": "       //data pismen zkoumaneho obrazku" },
                { "id": "49", "parent": "0", "text": "       ArrayList<ArrayList<ArrayList<HashMap<String, Integer>>>> MapaVsechPismenNaVsechRadcich = new ArrayList<ArrayList<ArrayList<HashMap<String, Integer>>>>();" },
                { "id": "50", "parent": "0", "text": "       " },
                { "id": "51", "parent": "0", "text": "       //data obdsahuji posouzeni vsech pismen vsech radku z obrazku vuci vsem pismenum abecedy" },
                { "id": "52", "parent": "0", "text": "       ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>> posouzeniPismenePngVsechRadkuKeVsemPismenABC = new ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>>();" },
                { "id": "53", "parent": "0", "text": "       " },
                { "id": "54", "parent": "0", "text": "       //obshuje pole pismen v celem obrazku - radcich + sloupcich" },
                { "id": "55", "parent": "0", "text": "       ArrayList<ArrayList<String>> pismenaVPng = new ArrayList<ArrayList<String>>();" },
                { "id": "56", "parent": "0", "text": "       " },
                { "id": "57", "parent": "0", "text": "       " },
                { "id": "58", "parent": "0", "text": "        " },
                { "id": "59", "parent": "0", "text": "       //inicializuje tridu" },
                { "id": "60", "parent": "0", "text": "       SouradniceSkupinyPismen SouradnicePismena = new SouradniceSkupinyPismen();" },
                { "id": "61", "parent": "0", "text": "       " },
                { "id": "62", "parent": "0", "text": "       //ziska vstupni data originalni pro porovnavani" },
                { "id": "63", "parent": "0", "text": "       zdrojDataAbeceda dataAbecedy = new zdrojDataAbeceda(adresaProjektu);" },
                { "id": "64", "parent": "63", "text": "public class zdrojDataAbeceda {" },
                { "id": "65", "parent": "63", "text": "    " },
                { "id": "66", "parent": "63", "text": "    String adresaSlozky;" },
                { "id": "67", "parent": "63", "text": "    String[] NazvySouboruPng = new String[26];" },
                { "id": "68", "parent": "63", "text": "    " },
                { "id": "69", "parent": "63", "text": "    public zdrojDataAbeceda(String adresaProjektu){" },
                { "id": "70", "parent": "63", "text": "        " },
                { "id": "71", "parent": "63", "text": "        //adresaSlozky = 'C:\\Users\\jonas\\OneDrive\\Dokumenty\\JAVA_KCT\\TextReader\\TextReader\\data\\';" },
                { "id": "72", "parent": "63", "text": "        adresaSlozky = adresaProjektu + '\\InputOutput\\srcLetters\\';" },
                { "id": "73", "parent": "63", "text": "        " },
                { "id": "74", "parent": "63", "text": "        NazvySouboruPng[0] = 'a.png';" },
                { "id": "75", "parent": "63", "text": "        NazvySouboruPng[1] = 'b.png';" },
                { "id": "76", "parent": "63", "text": "        NazvySouboruPng[2] = 'c.png';" },
                { "id": "77", "parent": "63", "text": "        NazvySouboruPng[3] = 'd.png';" },
                { "id": "78", "parent": "63", "text": "        NazvySouboruPng[4] = 'e.png';" },
                { "id": "79", "parent": "63", "text": "        NazvySouboruPng[5] = 'f.png';" },
                { "id": "80", "parent": "63", "text": "        NazvySouboruPng[6] = 'g.png';" },
                { "id": "81", "parent": "63", "text": "        NazvySouboruPng[7] = 'h.png';" },
                { "id": "82", "parent": "63", "text": "        NazvySouboruPng[8] = 'i.png';" },
                { "id": "83", "parent": "63", "text": "        NazvySouboruPng[9] = 'j.png';" },
                { "id": "84", "parent": "63", "text": "        NazvySouboruPng[10] = 'k.png';" },
                { "id": "85", "parent": "63", "text": "        NazvySouboruPng[11] = 'l.png';" },
                { "id": "86", "parent": "63", "text": "        NazvySouboruPng[12] = 'm.png';" },
                { "id": "87", "parent": "63", "text": "        NazvySouboruPng[13] = 'n.png';" },
                { "id": "88", "parent": "63", "text": "        NazvySouboruPng[14] = 'o.png';" },
                { "id": "89", "parent": "63", "text": "        NazvySouboruPng[15] = 'p.png';" },
                { "id": "90", "parent": "63", "text": "        NazvySouboruPng[16] = 'q.png';" },
                { "id": "91", "parent": "63", "text": "        NazvySouboruPng[17] = 'r.png';" },
                { "id": "92", "parent": "63", "text": "        NazvySouboruPng[18] = 's.png';" },
                { "id": "93", "parent": "63", "text": "        NazvySouboruPng[19] = 't.png';" },
                { "id": "94", "parent": "63", "text": "        NazvySouboruPng[20] = 'u.png';" },
                { "id": "95", "parent": "63", "text": "        NazvySouboruPng[21] = 'v.png';" },
                { "id": "96", "parent": "63", "text": "        NazvySouboruPng[22] = 'w.png';" },
                { "id": "97", "parent": "63", "text": "        NazvySouboruPng[23] = 'x.png';" },
                { "id": "98", "parent": "63", "text": "        NazvySouboruPng[24] = 'y.png';" },
                { "id": "99", "parent": "63", "text": "        NazvySouboruPng[25] = 'z.png';" },
                { "id": "100", "parent": "63", "text": "        " },
                { "id": "101", "parent": "63", "text": "    }" },
                { "id": "102", "parent": "63", "text": "    " },
                { "id": "103", "parent": "63", "text": "    public String getAdresaSlozky(){" },
                { "id": "104", "parent": "63", "text": "        " },
                { "id": "105", "parent": "63", "text": "        return (adresaSlozky);" },
                { "id": "106", "parent": "63", "text": "        " },
                { "id": "107", "parent": "63", "text": "    }" },
                { "id": "108", "parent": "63", "text": "    " },
                { "id": "109", "parent": "63", "text": "    public String[] getNazvySouboruPng(){" },
                { "id": "110", "parent": "63", "text": "        " },
                { "id": "111", "parent": "63", "text": "        return (NazvySouboruPng);" },
                { "id": "112", "parent": "63", "text": "        " },
                { "id": "113", "parent": "63", "text": "    }" },
                { "id": "114", "parent": "63", "text": "    " },
                { "id": "115", "parent": "0", "text": "       SouradnicePismena.nactiDataAbecedy(dataAbecedy.getAdresaSlozky(), dataAbecedy.getNazvySouboruPng()); " },
                { "id": "116", "parent": "115", "text": "    public void nactiDataAbecedy(String adresaSlozky, String[] NazvySouboruPng) throws IOException{" },
                { "id": "117", "parent": "115", "text": "        " },
                { "id": "118", "parent": "115", "text": "        String nazevZdrojPng;" },
                { "id": "119", "parent": "115", "text": "        String celaAdresaZdrojPng;" },
                { "id": "120", "parent": "115", "text": "        " },
                { "id": "121", "parent": "115", "text": "        NactiPng novyObrazek;" },
                { "id": "122", "parent": "115", "text": "        " },
                { "id": "123", "parent": "115", "text": "        ArrayList<HashMap<String, Integer>> souradniceVsechBarevObrazku;" },
                { "id": "124", "parent": "115", "text": "        ArrayList<HashMap<String, Integer>> souradniceObrazkuModifikovane = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "125", "parent": "115", "text": "        " },
                { "id": "126", "parent": "115", "text": "        for (int i = 0; i < NazvySouboruPng.length; i++) {" },
                { "id": "127", "parent": "115", "text": "            nazevZdrojPng = NazvySouboruPng[i];" },
                { "id": "128", "parent": "115", "text": "            " },
                { "id": "129", "parent": "115", "text": "            celaAdresaZdrojPng = adresaSlozky + nazevZdrojPng;" },
                { "id": "130", "parent": "115", "text": "            novyObrazek = new NactiPng(adresaSlozky, nazevZdrojPng);" },
                { "id": "131", "parent": "115", "text": "            " },
                { "id": "132", "parent": "115", "text": "            //nacte data z jednoho obrazku" },
                { "id": "133", "parent": "115", "text": "            souradniceVsechBarevObrazku = novyObrazek.getSouradniceVsechBarev();" },
                { "id": "134", "parent": "133", "text": "    public ArrayList<HashMap<String, Integer>> getSouradniceVsechBarev(){" },
                { "id": "135", "parent": "133", "text": "        " },
                { "id": "136", "parent": "133", "text": "        return souradniceVsechBarev;" },
                { "id": "137", "parent": "133", "text": "        " },
                { "id": "138", "parent": "115", "text": "            " },
                { "id": "139", "parent": "115", "text": "            //inicializuje tridu pro ziskani souradnic, ktere jsou pouze cerne" },
                { "id": "140", "parent": "115", "text": "            SouradniceJednohoPismene souradniceCerne = new SouradniceJednohoPismene(souradniceVsechBarevObrazku);" },
                { "id": "141", "parent": "140", "text": "public class SouradniceJednohoPismene {" },
                { "id": "142", "parent": "140", "text": "    " },
                { "id": "143", "parent": "140", "text": "    ArrayList<HashMap<String, Integer>> souradniceVsechBarev = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "144", "parent": "140", "text": "    ArrayList<HashMap<String, Integer>> souradnicePismeneRedukovana = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "145", "parent": "140", "text": "    " },
                { "id": "146", "parent": "140", "text": "    " },
                { "id": "147", "parent": "140", "text": "    public SouradniceJednohoPismene(ArrayList<HashMap<String, Integer>> souradniceVsechBarev){" },
                { "id": "148", "parent": "140", "text": "        " },
                { "id": "149", "parent": "140", "text": "        this.souradniceVsechBarev = souradniceVsechBarev;" },
                { "id": "150", "parent": "140", "text": "          " },
                { "id": "151", "parent": "140", "text": "    }" },
                { "id": "152", "parent": "140", "text": "    " },
                { "id": "153", "parent": "140", "text": "    public ArrayList<HashMap<String, Integer>> getSouradnicePismeneCernobile(int r, int g, int b){" },
                { "id": "154", "parent": "140", "text": "        " },
                { "id": "155", "parent": "140", "text": "        extraktujSouradniceUrciteBarvy(r, g, b);" },
                { "id": "156", "parent": "140", "text": "        return(souradnicePismeneRedukovana);" },
                { "id": "157", "parent": "140", "text": "        " },
                { "id": "158", "parent": "140", "text": "    }" },
                { "id": "159", "parent": "140", "text": "    " },
                { "id": "160", "parent": "140", "text": "    public ArrayList<HashMap<String, Integer>> getSouradniceVztazeneKNule(){" },
                { "id": "161", "parent": "140", "text": "        " },
                { "id": "162", "parent": "140", "text": "        vztahniSouradniceKNule();" },
                { "id": "163", "parent": "140", "text": "        return(souradnicePismeneRedukovana);" },
                { "id": "164", "parent": "140", "text": "        " },
                { "id": "165", "parent": "140", "text": "    }" },
                { "id": "166", "parent": "140", "text": "" },
                { "id": "167", "parent": "140", "text": "    " },
                { "id": "168", "parent": "140", "text": "    private void extraktujSouradniceUrciteBarvy(int r, int g, int b){" },
                { "id": "169", "parent": "140", "text": "        " },
                { "id": "170", "parent": "140", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>();" },
                { "id": "171", "parent": "140", "text": "        HashMap<String, Integer> RGBnew = new HashMap<String, Integer>();" },
                { "id": "172", "parent": "140", "text": "        ArrayList<HashMap<String, Integer>> souradnicePismene = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "173", "parent": "140", "text": "        " },
                { "id": "174", "parent": "140", "text": "        int x;" },
                { "id": "175", "parent": "140", "text": "        int y;" },
                { "id": "176", "parent": "140", "text": "        " },
                { "id": "177", "parent": "140", "text": "        int red;" },
                { "id": "178", "parent": "140", "text": "        int green;" },
                { "id": "179", "parent": "140", "text": "        int blue;" },
                { "id": "180", "parent": "140", "text": "        " },
                { "id": "181", "parent": "140", "text": "        for (int i = 0; i < souradniceVsechBarev.size(); i++) {" },
                { "id": "182", "parent": "140", "text": "            RGB = souradniceVsechBarev.get(i);" },
                { "id": "183", "parent": "140", "text": "            " },
                { "id": "184", "parent": "140", "text": "            " },
                { "id": "185", "parent": "140", "text": "            x = RGB.get('x');" },
                { "id": "186", "parent": "140", "text": "            y = RGB.get('y');" },
                { "id": "187", "parent": "140", "text": "" },
                { "id": "188", "parent": "140", "text": "            red = RGB.get('Red');" },
                { "id": "189", "parent": "140", "text": "            green = RGB.get('Green');" },
                { "id": "190", "parent": "140", "text": "            blue = RGB.get('Blue');" },
                { "id": "191", "parent": "140", "text": "" },
                { "id": "192", "parent": "140", "text": "" },
                { "id": "193", "parent": "140", "text": "            if(red == r){" },
                { "id": "194", "parent": "140", "text": "                if(green == g){" },
                { "id": "195", "parent": "140", "text": "                    if(blue == b){" },
                { "id": "196", "parent": "140", "text": "                        RGBnew = zapisRGBDoMapy(x, y, red, green, blue);" },
                { "id": "197", "parent": "140", "text": "                        souradnicePismene.add(RGBnew);" },
                { "id": "198", "parent": "140", "text": "                    }" },
                { "id": "199", "parent": "140", "text": "                }" },
                { "id": "200", "parent": "140", "text": "            }" },
                { "id": "201", "parent": "140", "text": "            " },
                { "id": "202", "parent": "140", "text": "            " },
                { "id": "203", "parent": "140", "text": "          " },
                { "id": "204", "parent": "140", "text": "        }" },
                { "id": "205", "parent": "140", "text": "        " },
                { "id": "206", "parent": "140", "text": "        souradnicePismeneRedukovana = souradnicePismene;" },
                { "id": "207", "parent": "140", "text": "        System.out.print('');" },
                { "id": "208", "parent": "140", "text": "        " },
                { "id": "209", "parent": "140", "text": "    } " },
                { "id": "210", "parent": "140", "text": "    " },
                { "id": "211", "parent": "140", "text": "    //vztahne souradnice k nule" },
                { "id": "212", "parent": "140", "text": "    private void vztahniSouradniceKNule(){" },
                { "id": "213", "parent": "140", "text": "        " },
                { "id": "214", "parent": "140", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>();" },
                { "id": "215", "parent": "140", "text": "        HashMap<String, Integer> souradnicePismene_0_0 = new HashMap<String, Integer>();" },
                { "id": "216", "parent": "140", "text": "        HashMap<String, Integer> oznaceniDat = new HashMap<String, Integer>();" },
                { "id": "217", "parent": "140", "text": "        " },
                { "id": "218", "parent": "140", "text": "        int xOrig;" },
                { "id": "219", "parent": "140", "text": "        int yOrig;" },
                { "id": "220", "parent": "140", "text": "        " },
                { "id": "221", "parent": "140", "text": "        int xNew;" },
                { "id": "222", "parent": "140", "text": "        int yNew;" },
                { "id": "223", "parent": "140", "text": "        " },
                { "id": "224", "parent": "140", "text": "        int xMin = vratMinimalniSouradnico('x');" },
                { "id": "225", "parent": "140", "text": "        int yMin = vratMinimalniSouradnico('y');" },
                { "id": "226", "parent": "140", "text": "        " },
                { "id": "227", "parent": "140", "text": "        int red;" },
                { "id": "228", "parent": "140", "text": "        int green;" },
                { "id": "229", "parent": "140", "text": "        int blue;" },
                { "id": "230", "parent": "140", "text": "        " },
                { "id": "231", "parent": "140", "text": "        //0-ty radek souradnicePismeneRedukovana oznacuje o jaka data se jedna" },
                { "id": "232", "parent": "140", "text": "        //oznaceniDat.put(nazevData, null);" },
                { "id": "233", "parent": "140", "text": "        souradnicePismeneRedukovana.add(oznaceniDat);" },
                { "id": "234", "parent": "140", "text": "        " },
                { "id": "235", "parent": "140", "text": "        for (int i = 0; i < souradniceVsechBarev.size(); i++) {  " },
                { "id": "236", "parent": "140", "text": "            RGB = souradniceVsechBarev.get(i);" },
                { "id": "237", "parent": "140", "text": "                     " },
                { "id": "238", "parent": "140", "text": "            " },
                { "id": "239", "parent": "140", "text": "            xOrig = RGB.get('x');" },
                { "id": "240", "parent": "140", "text": "            yOrig = RGB.get('y');" },
                { "id": "241", "parent": "140", "text": "            " },
                { "id": "242", "parent": "140", "text": "            xNew = xOrig - xMin + 1;" },
                { "id": "243", "parent": "140", "text": "            yNew = yOrig - yMin + 1;" },
                { "id": "244", "parent": "140", "text": "            " },
                { "id": "245", "parent": "140", "text": "            red = RGB.get('Red');" },
                { "id": "246", "parent": "140", "text": "            green = RGB.get('Green');" },
                { "id": "247", "parent": "140", "text": "            blue = RGB.get('Blue');" },
                { "id": "248", "parent": "140", "text": "            " },
                { "id": "249", "parent": "140", "text": "            " },
                { "id": "250", "parent": "140", "text": "            souradnicePismene_0_0 = zapisRGBDoMapy(xNew, yNew, red, green, blue);" },
                { "id": "251", "parent": "140", "text": "            souradnicePismeneRedukovana.add(souradnicePismene_0_0);" },
                { "id": "252", "parent": "140", "text": "               " },
                { "id": "253", "parent": "140", "text": "        }" },
                { "id": "254", "parent": "140", "text": "        " },
                { "id": "255", "parent": "140", "text": "        " },
                { "id": "256", "parent": "140", "text": "    }" },
                { "id": "257", "parent": "140", "text": "    " },
                { "id": "258", "parent": "140", "text": "    " },
                { "id": "259", "parent": "140", "text": "    int vratMinimalniSouradnico(String XneboY){" },
                { "id": "260", "parent": "140", "text": "        " },
                { "id": "261", "parent": "140", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>();" },
                { "id": "262", "parent": "140", "text": "        " },
                { "id": "263", "parent": "140", "text": "        int sour;" },
                { "id": "264", "parent": "140", "text": "        " },
                { "id": "265", "parent": "140", "text": "        int sourMin = -1;" },
                { "id": "266", "parent": "140", "text": "   " },
                { "id": "267", "parent": "140", "text": "        for (int i = 0; i < souradniceVsechBarev.size(); i++) {" },
                { "id": "268", "parent": "140", "text": "            RGB = souradniceVsechBarev.get(i);" },
                { "id": "269", "parent": "140", "text": "            sour = RGB.get(XneboY);" },
                { "id": "270", "parent": "140", "text": "            " },
                { "id": "271", "parent": "140", "text": "            if(i == 0){" },
                { "id": "272", "parent": "140", "text": "                sourMin = sour;" },
                { "id": "273", "parent": "140", "text": "            }" },
                { "id": "274", "parent": "140", "text": "            else {" },
                { "id": "275", "parent": "140", "text": "                if(sour < sourMin){" },
                { "id": "276", "parent": "140", "text": "                    sourMin = sour;" },
                { "id": "277", "parent": "140", "text": "                }" },
                { "id": "278", "parent": "140", "text": "            }" },
                { "id": "279", "parent": "140", "text": "        }" },
                { "id": "280", "parent": "140", "text": "        " },
                { "id": "281", "parent": "140", "text": "        return(sourMin);" },
                { "id": "282", "parent": "140", "text": "    }" },
                { "id": "283", "parent": "140", "text": "    " },
                { "id": "284", "parent": "140", "text": "    " },
                { "id": "285", "parent": "140", "text": "    private HashMap<String, Integer> zapisRGBDoMapy(int x, int y, int r, int g, int b){" },
                { "id": "286", "parent": "140", "text": "        " },
                { "id": "287", "parent": "140", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>(); " },
                { "id": "288", "parent": "140", "text": "        " },
                { "id": "289", "parent": "140", "text": "        RGB.put('x', x); " },
                { "id": "290", "parent": "140", "text": "        RGB.put('y', y); " },
                { "id": "291", "parent": "140", "text": "        " },
                { "id": "292", "parent": "140", "text": "        RGB.put('Red', r); " },
                { "id": "293", "parent": "140", "text": "        RGB.put('Green', g); " },
                { "id": "294", "parent": "140", "text": "        RGB.put('Blue', b);" },
                { "id": "295", "parent": "140", "text": "        " },
                { "id": "296", "parent": "140", "text": "        return(RGB);" },
                { "id": "297", "parent": "140", "text": "        " },
                { "id": "298", "parent": "140", "text": "    }" },
                { "id": "299", "parent": "140", "text": "    " },
                { "id": "300", "parent": "115", "text": "            souradniceObrazkuModifikovane = souradniceCerne.getSouradnicePismeneCernobile(0, 0, 0);" },
                { "id": "301", "parent": "300", "text": "    public ArrayList<HashMap<String, Integer>> getSouradnicePismeneCernobile(int r, int g, int b){" },
                { "id": "302", "parent": "300", "text": "        " },
                { "id": "303", "parent": "300", "text": "        extraktujSouradniceUrciteBarvy(r, g, b);" },
                { "id": "304", "parent": "300", "text": "        return(souradnicePismeneRedukovana);" },
                { "id": "305", "parent": "115", "text": "            " },
                { "id": "306", "parent": "115", "text": "            //re-inicializuje tridu pro ziskani souradnic, ktere jsou vztazene k nule" },
                { "id": "307", "parent": "115", "text": "            SouradniceJednohoPismene souradniceKNule = new SouradniceJednohoPismene(souradniceObrazkuModifikovane);" },
                { "id": "308", "parent": "307", "text": "public class SouradniceJednohoPismene {" },
                { "id": "309", "parent": "307", "text": "    " },
                { "id": "310", "parent": "307", "text": "    ArrayList<HashMap<String, Integer>> souradniceVsechBarev = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "311", "parent": "307", "text": "    ArrayList<HashMap<String, Integer>> souradnicePismeneRedukovana = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "312", "parent": "307", "text": "    " },
                { "id": "313", "parent": "307", "text": "    " },
                { "id": "314", "parent": "307", "text": "    public SouradniceJednohoPismene(ArrayList<HashMap<String, Integer>> souradniceVsechBarev){" },
                { "id": "315", "parent": "307", "text": "        " },
                { "id": "316", "parent": "307", "text": "        this.souradniceVsechBarev = souradniceVsechBarev;" },
                { "id": "317", "parent": "307", "text": "          " },
                { "id": "318", "parent": "307", "text": "    }" },
                { "id": "319", "parent": "307", "text": "    " },
                { "id": "320", "parent": "307", "text": "    public ArrayList<HashMap<String, Integer>> getSouradnicePismeneCernobile(int r, int g, int b){" },
                { "id": "321", "parent": "307", "text": "        " },
                { "id": "322", "parent": "307", "text": "        extraktujSouradniceUrciteBarvy(r, g, b);" },
                { "id": "323", "parent": "307", "text": "        return(souradnicePismeneRedukovana);" },
                { "id": "324", "parent": "307", "text": "        " },
                { "id": "325", "parent": "307", "text": "    }" },
                { "id": "326", "parent": "307", "text": "    " },
                { "id": "327", "parent": "307", "text": "    public ArrayList<HashMap<String, Integer>> getSouradniceVztazeneKNule(){" },
                { "id": "328", "parent": "307", "text": "        " },
                { "id": "329", "parent": "307", "text": "        vztahniSouradniceKNule();" },
                { "id": "330", "parent": "307", "text": "        return(souradnicePismeneRedukovana);" },
                { "id": "331", "parent": "307", "text": "        " },
                { "id": "332", "parent": "307", "text": "    }" },
                { "id": "333", "parent": "307", "text": "" },
                { "id": "334", "parent": "307", "text": "    " },
                { "id": "335", "parent": "307", "text": "    private void extraktujSouradniceUrciteBarvy(int r, int g, int b){" },
                { "id": "336", "parent": "307", "text": "        " },
                { "id": "337", "parent": "307", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>();" },
                { "id": "338", "parent": "307", "text": "        HashMap<String, Integer> RGBnew = new HashMap<String, Integer>();" },
                { "id": "339", "parent": "307", "text": "        ArrayList<HashMap<String, Integer>> souradnicePismene = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "340", "parent": "307", "text": "        " },
                { "id": "341", "parent": "307", "text": "        int x;" },
                { "id": "342", "parent": "307", "text": "        int y;" },
                { "id": "343", "parent": "307", "text": "        " },
                { "id": "344", "parent": "307", "text": "        int red;" },
                { "id": "345", "parent": "307", "text": "        int green;" },
                { "id": "346", "parent": "307", "text": "        int blue;" },
                { "id": "347", "parent": "307", "text": "        " },
                { "id": "348", "parent": "307", "text": "        for (int i = 0; i < souradniceVsechBarev.size(); i++) {" },
                { "id": "349", "parent": "307", "text": "            RGB = souradniceVsechBarev.get(i);" },
                { "id": "350", "parent": "307", "text": "            " },
                { "id": "351", "parent": "307", "text": "            " },
                { "id": "352", "parent": "307", "text": "            x = RGB.get('x');" },
                { "id": "353", "parent": "307", "text": "            y = RGB.get('y');" },
                { "id": "354", "parent": "307", "text": "" },
                { "id": "355", "parent": "307", "text": "            red = RGB.get('Red');" },
                { "id": "356", "parent": "307", "text": "            green = RGB.get('Green');" },
                { "id": "357", "parent": "307", "text": "            blue = RGB.get('Blue');" },
                { "id": "358", "parent": "307", "text": "" },
                { "id": "359", "parent": "307", "text": "" },
                { "id": "360", "parent": "307", "text": "            if(red == r){" },
                { "id": "361", "parent": "307", "text": "                if(green == g){" },
                { "id": "362", "parent": "307", "text": "                    if(blue == b){" },
                { "id": "363", "parent": "307", "text": "                        RGBnew = zapisRGBDoMapy(x, y, red, green, blue);" },
                { "id": "364", "parent": "307", "text": "                        souradnicePismene.add(RGBnew);" },
                { "id": "365", "parent": "307", "text": "                    }" },
                { "id": "366", "parent": "307", "text": "                }" },
                { "id": "367", "parent": "307", "text": "            }" },
                { "id": "368", "parent": "307", "text": "            " },
                { "id": "369", "parent": "307", "text": "            " },
                { "id": "370", "parent": "307", "text": "          " },
                { "id": "371", "parent": "307", "text": "        }" },
                { "id": "372", "parent": "307", "text": "        " },
                { "id": "373", "parent": "307", "text": "        souradnicePismeneRedukovana = souradnicePismene;" },
                { "id": "374", "parent": "307", "text": "        System.out.print('');" },
                { "id": "375", "parent": "307", "text": "        " },
                { "id": "376", "parent": "307", "text": "    } " },
                { "id": "377", "parent": "307", "text": "    " },
                { "id": "378", "parent": "307", "text": "    //vztahne souradnice k nule" },
                { "id": "379", "parent": "307", "text": "    private void vztahniSouradniceKNule(){" },
                { "id": "380", "parent": "307", "text": "        " },
                { "id": "381", "parent": "307", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>();" },
                { "id": "382", "parent": "307", "text": "        HashMap<String, Integer> souradnicePismene_0_0 = new HashMap<String, Integer>();" },
                { "id": "383", "parent": "307", "text": "        HashMap<String, Integer> oznaceniDat = new HashMap<String, Integer>();" },
                { "id": "384", "parent": "307", "text": "        " },
                { "id": "385", "parent": "307", "text": "        int xOrig;" },
                { "id": "386", "parent": "307", "text": "        int yOrig;" },
                { "id": "387", "parent": "307", "text": "        " },
                { "id": "388", "parent": "307", "text": "        int xNew;" },
                { "id": "389", "parent": "307", "text": "        int yNew;" },
                { "id": "390", "parent": "307", "text": "        " },
                { "id": "391", "parent": "307", "text": "        int xMin = vratMinimalniSouradnico('x');" },
                { "id": "392", "parent": "307", "text": "        int yMin = vratMinimalniSouradnico('y');" },
                { "id": "393", "parent": "307", "text": "        " },
                { "id": "394", "parent": "307", "text": "        int red;" },
                { "id": "395", "parent": "307", "text": "        int green;" },
                { "id": "396", "parent": "307", "text": "        int blue;" },
                { "id": "397", "parent": "307", "text": "        " },
                { "id": "398", "parent": "307", "text": "        //0-ty radek souradnicePismeneRedukovana oznacuje o jaka data se jedna" },
                { "id": "399", "parent": "307", "text": "        //oznaceniDat.put(nazevData, null);" },
                { "id": "400", "parent": "307", "text": "        souradnicePismeneRedukovana.add(oznaceniDat);" },
                { "id": "401", "parent": "307", "text": "        " },
                { "id": "402", "parent": "307", "text": "        for (int i = 0; i < souradniceVsechBarev.size(); i++) {  " },
                { "id": "403", "parent": "307", "text": "            RGB = souradniceVsechBarev.get(i);" },
                { "id": "404", "parent": "307", "text": "                     " },
                { "id": "405", "parent": "307", "text": "            " },
                { "id": "406", "parent": "307", "text": "            xOrig = RGB.get('x');" },
                { "id": "407", "parent": "307", "text": "            yOrig = RGB.get('y');" },
                { "id": "408", "parent": "307", "text": "            " },
                { "id": "409", "parent": "307", "text": "            xNew = xOrig - xMin + 1;" },
                { "id": "410", "parent": "307", "text": "            yNew = yOrig - yMin + 1;" },
                { "id": "411", "parent": "307", "text": "            " },
                { "id": "412", "parent": "307", "text": "            red = RGB.get('Red');" },
                { "id": "413", "parent": "307", "text": "            green = RGB.get('Green');" },
                { "id": "414", "parent": "307", "text": "            blue = RGB.get('Blue');" },
                { "id": "415", "parent": "307", "text": "            " },
                { "id": "416", "parent": "307", "text": "            " },
                { "id": "417", "parent": "307", "text": "            souradnicePismene_0_0 = zapisRGBDoMapy(xNew, yNew, red, green, blue);" },
                { "id": "418", "parent": "307", "text": "            souradnicePismeneRedukovana.add(souradnicePismene_0_0);" },
                { "id": "419", "parent": "307", "text": "               " },
                { "id": "420", "parent": "307", "text": "        }" },
                { "id": "421", "parent": "307", "text": "        " },
                { "id": "422", "parent": "307", "text": "        " },
                { "id": "423", "parent": "307", "text": "    }" },
                { "id": "424", "parent": "307", "text": "    " },
                { "id": "425", "parent": "307", "text": "    " },
                { "id": "426", "parent": "307", "text": "    int vratMinimalniSouradnico(String XneboY){" },
                { "id": "427", "parent": "307", "text": "        " },
                { "id": "428", "parent": "307", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>();" },
                { "id": "429", "parent": "307", "text": "        " },
                { "id": "430", "parent": "307", "text": "        int sour;" },
                { "id": "431", "parent": "307", "text": "        " },
                { "id": "432", "parent": "307", "text": "        int sourMin = -1;" },
                { "id": "433", "parent": "307", "text": "   " },
                { "id": "434", "parent": "307", "text": "        for (int i = 0; i < souradniceVsechBarev.size(); i++) {" },
                { "id": "435", "parent": "307", "text": "            RGB = souradniceVsechBarev.get(i);" },
                { "id": "436", "parent": "307", "text": "            sour = RGB.get(XneboY);" },
                { "id": "437", "parent": "307", "text": "            " },
                { "id": "438", "parent": "307", "text": "            if(i == 0){" },
                { "id": "439", "parent": "307", "text": "                sourMin = sour;" },
                { "id": "440", "parent": "307", "text": "            }" },
                { "id": "441", "parent": "307", "text": "            else {" },
                { "id": "442", "parent": "307", "text": "                if(sour < sourMin){" },
                { "id": "443", "parent": "307", "text": "                    sourMin = sour;" },
                { "id": "444", "parent": "307", "text": "                }" },
                { "id": "445", "parent": "307", "text": "            }" },
                { "id": "446", "parent": "307", "text": "        }" },
                { "id": "447", "parent": "307", "text": "        " },
                { "id": "448", "parent": "307", "text": "        return(sourMin);" },
                { "id": "449", "parent": "307", "text": "    }" },
                { "id": "450", "parent": "307", "text": "    " },
                { "id": "451", "parent": "307", "text": "    " },
                { "id": "452", "parent": "307", "text": "    private HashMap<String, Integer> zapisRGBDoMapy(int x, int y, int r, int g, int b){" },
                { "id": "453", "parent": "307", "text": "        " },
                { "id": "454", "parent": "307", "text": "        HashMap<String, Integer> RGB = new HashMap<String, Integer>(); " },
                { "id": "455", "parent": "307", "text": "        " },
                { "id": "456", "parent": "307", "text": "        RGB.put('x', x); " },
                { "id": "457", "parent": "307", "text": "        RGB.put('y', y); " },
                { "id": "458", "parent": "307", "text": "        " },
                { "id": "459", "parent": "307", "text": "        RGB.put('Red', r); " },
                { "id": "460", "parent": "307", "text": "        RGB.put('Green', g); " },
                { "id": "461", "parent": "307", "text": "        RGB.put('Blue', b);" },
                { "id": "462", "parent": "307", "text": "        " },
                { "id": "463", "parent": "307", "text": "        return(RGB);" },
                { "id": "464", "parent": "307", "text": "        " },
                { "id": "465", "parent": "307", "text": "    }" },
                { "id": "466", "parent": "307", "text": "    " },
                { "id": "467", "parent": "115", "text": "            souradniceObrazkuModifikovane = souradniceKNule.getSouradniceVztazeneKNule();" },
                { "id": "468", "parent": "467", "text": "    public ArrayList<HashMap<String, Integer>> getSouradniceVztazeneKNule(){" },
                { "id": "469", "parent": "467", "text": "        " },
                { "id": "470", "parent": "467", "text": "        vztahniSouradniceKNule();" },
                { "id": "471", "parent": "467", "text": "        return(souradnicePismeneRedukovana);" },
                { "id": "472", "parent": "467", "text": "        " },
                { "id": "473", "parent": "115", "text": "            " },
                { "id": "474", "parent": "115", "text": "            //zapise souradnice do pole" },
                { "id": "475", "parent": "115", "text": "            MapaPismenAbeceda.add(souradniceObrazkuModifikovane);" },
                { "id": "476", "parent": "115", "text": "            " },
                { "id": "477", "parent": "115", "text": "            System.out.print('');" },
                { "id": "478", "parent": "115", "text": "        }" },
                { "id": "479", "parent": "115", "text": "        " },
                { "id": "480", "parent": "115", "text": "        System.out.print('');" },
                { "id": "481", "parent": "115", "text": "        " },
                { "id": "482", "parent": "0", "text": "       MapaPismenAbeceda = SouradnicePismena.getMapaPismenAbeceda();" },
                { "id": "483", "parent": "0", "text": "       " },
                { "id": "484", "parent": "0", "text": "       //ziska data zkoumaneho obrazku" },
                { "id": "485", "parent": "0", "text": "       zdrojDataZkoum zkoumanaData = new zdrojDataZkoum(adresaProjektu);" },
                { "id": "486", "parent": "485", "text": "    " },
                { "id": "487", "parent": "485", "text": "    String adresaSlozky;" },
                { "id": "488", "parent": "485", "text": "    String NazevSouboruPng;" },
                { "id": "489", "parent": "485", "text": "    " },
                { "id": "490", "parent": "485", "text": "    public zdrojDataZkoum(String adresaProjektu){" },
                { "id": "491", "parent": "485", "text": "        " },
                { "id": "492", "parent": "485", "text": "        //adresaSlozky = 'C:\\Users\\jonas\\OneDrive\\Dokumenty\\JAVA_KCT\\TextReader\\TextReader\\test\\';" },
                { "id": "493", "parent": "485", "text": "        adresaSlozky = adresaProjektu + '\\InputOutput\\pictureInput\\';" },
                { "id": "494", "parent": "485", "text": "        NazevSouboruPng = 'testPng.png';" },
                { "id": "495", "parent": "485", "text": "        " },
                { "id": "496", "parent": "485", "text": "    }" },
                { "id": "497", "parent": "485", "text": "    " },
                { "id": "498", "parent": "485", "text": "    public String getAdresaSlozky(){" },
                { "id": "499", "parent": "485", "text": "        " },
                { "id": "500", "parent": "485", "text": "        return (adresaSlozky);" },
                { "id": "501", "parent": "485", "text": "        " },
                { "id": "502", "parent": "485", "text": "    }" },
                { "id": "503", "parent": "485", "text": "    " },
                { "id": "504", "parent": "485", "text": "    public String getNazevSouboruPng(){" },
                { "id": "505", "parent": "485", "text": "        " },
                { "id": "506", "parent": "485", "text": "        return (NazevSouboruPng);" },
                { "id": "507", "parent": "0", "text": "       SouradnicePismena.nactiDataZkoumanehoObrazku(zkoumanaData.getAdresaSlozky(), zkoumanaData.getNazevSouboruPng());" },
                { "id": "508", "parent": "0", "text": "       MapaVsechPismenNaVsechRadcich = SouradnicePismena.getMapaVsechPismenNaVsechRadcich();" },
                { "id": "509", "parent": "0", "text": "       " },
                { "id": "510", "parent": "0", "text": "       ///////////////////////////////////////////////////////" },
                { "id": "511", "parent": "0", "text": "       //tiskne data do logu" },
                { "id": "512", "parent": "0", "text": "       convertArrayList csvOutput = new convertArrayList(MapaVsechPismenNaVsechRadcich, 'mainResult2.txt');" },
                { "id": "513", "parent": "0", "text": "       ///////////////////////////////////////////////////////" },
                { "id": "514", "parent": "0", "text": "       " },
                { "id": "515", "parent": "0", "text": "       " },
                { "id": "516", "parent": "0", "text": "       //porovnavaData" },
                { "id": "517", "parent": "0", "text": "       PosouzeniSouradnic posouzeni = new PosouzeniSouradnic(MapaPismenAbeceda, MapaVsechPismenNaVsechRadcich);" },
                { "id": "518", "parent": "517", "text": "public class PosouzeniSouradnic {" },
                { "id": "519", "parent": "517", "text": "    " },
                { "id": "520", "parent": "517", "text": "    ArrayList<ArrayList<HashMap<String, Integer>>> MapaPismenAbeceda = new ArrayList<ArrayList<HashMap<String, Integer>>>();" },
                { "id": "521", "parent": "517", "text": "    ArrayList<ArrayList<ArrayList<HashMap<String, Integer>>>> MapaVsechPismenNaVsechRadcich = new ArrayList<ArrayList<ArrayList<HashMap<String, Integer>>>>();" },
                { "id": "522", "parent": "517", "text": "    " },
                { "id": "523", "parent": "517", "text": "    //data obdsahuji posouzeni vsech pismen vsech radku z obrazku vuci vsem pismenum abecedy" },
                { "id": "524", "parent": "517", "text": "    ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>> posouzeniPismenePngVsechRadkuKeVsemPismenABC = new ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>>();" },
                { "id": "525", "parent": "517", "text": "    " },
                { "id": "526", "parent": "517", "text": "    " },
                { "id": "527", "parent": "517", "text": "    public PosouzeniSouradnic(ArrayList<ArrayList<HashMap<String, Integer>>> MapaPismenAbeceda, ArrayList<ArrayList<ArrayList<HashMap<String, Integer>>>> MapaVsechPismenNaVsechRadcich){" },
                { "id": "528", "parent": "517", "text": "        " },
                { "id": "529", "parent": "517", "text": "        this.MapaPismenAbeceda = MapaPismenAbeceda;" },
                { "id": "530", "parent": "517", "text": "        this.MapaVsechPismenNaVsechRadcich = MapaVsechPismenNaVsechRadcich;" },
                { "id": "531", "parent": "517", "text": "        " },
                { "id": "532", "parent": "517", "text": "        //zatim provizorne ziskavam data jakozto dilci mapy pismenek, ktere budou porovnavat" },
                { "id": "533", "parent": "517", "text": "        ArrayList<ArrayList<HashMap<String, Integer>>> MapaVsechPismenNaJednomRadku = new ArrayList<ArrayList<HashMap<String, Integer>>>();" },
                { "id": "534", "parent": "517", "text": "        ArrayList<HashMap<String, Integer>> MapaPismeneZVybranehoSloupce = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "535", "parent": "517", "text": "        " },
                { "id": "536", "parent": "517", "text": "        //data obdsahuji posouzeni jednoho pismene z obrazku vuci vsem pismenum abecedy, ten s nejmensi odchylkaSqrt vyhrava" },
                { "id": "537", "parent": "517", "text": "        ArrayList<HashMap<String, Double>> posouzeniJednohoPismenePngKeVsemPismenumABC = new ArrayList<HashMap<String, Double>>();" },
                { "id": "538", "parent": "517", "text": "        " },
                { "id": "539", "parent": "517", "text": "        ArrayList<ArrayList<HashMap<String, Double>>> posouzeniVsechPismenPngKeVsemPismenumABC = new ArrayList<ArrayList<HashMap<String, Double>>>();" },
                { "id": "540", "parent": "517", "text": "        " },
                { "id": "541", "parent": "517", "text": "        //data obdsahuji posouzeni vsech pismen jednoho radku z obrazku vuci vsem pismenum abecedy" },
                { "id": "542", "parent": "517", "text": "        ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>> posouzeniPismenePngJednohoRadkuKeVsemPismenABC = null;" },
                { "id": "543", "parent": "517", "text": "        " },
                { "id": "544", "parent": "517", "text": "        for (int r = 0; r < MapaVsechPismenNaVsechRadcich.size(); r++) {" },
                { "id": "545", "parent": "517", "text": "            MapaVsechPismenNaJednomRadku = MapaVsechPismenNaVsechRadcich.get(r);" },
                { "id": "546", "parent": "517", "text": "            posouzeniVsechPismenPngKeVsemPismenumABC = new ArrayList<ArrayList<HashMap<String, Double>>>();" },
                { "id": "547", "parent": "517", "text": "            " },
                { "id": "548", "parent": "517", "text": "            for (int s = 0; s < MapaVsechPismenNaJednomRadku.size(); s++) {" },
                { "id": "549", "parent": "517", "text": "                MapaPismeneZVybranehoSloupce = MapaVsechPismenNaJednomRadku.get(s);" },
                { "id": "550", "parent": "517", "text": "        " },
                { "id": "551", "parent": "517", "text": "                posouzeniJednohoPismenePngKeVsemPismenumABC = (provedPosouzeniProVsechnaPismenaAbecedy(MapaPismeneZVybranehoSloupce, MapaPismenAbeceda));" },
                { "id": "552", "parent": "517", "text": "                posouzeniVsechPismenPngKeVsemPismenumABC.add(posouzeniJednohoPismenePngKeVsemPismenumABC);" },
                { "id": "553", "parent": "517", "text": "                System.out.print('');" },
                { "id": "554", "parent": "517", "text": "            } " },
                { "id": "555", "parent": "517", "text": "            " },
                { "id": "556", "parent": "517", "text": "            posouzeniPismenePngVsechRadkuKeVsemPismenABC.add(posouzeniVsechPismenPngKeVsemPismenumABC);" },
                { "id": "557", "parent": "517", "text": "        }    " },
                { "id": "558", "parent": "517", "text": "        " },
                { "id": "559", "parent": "517", "text": "        //posouzeniPismenePngVsechRadkuKeVsemPismenABC.add(posouzeniPismenePngJednohoRadkuKeVsemPismenABC);" },
                { "id": "560", "parent": "517", "text": "        System.out.print('');" },
                { "id": "561", "parent": "517", "text": "    }" },
                { "id": "562", "parent": "517", "text": "    " },
                { "id": "563", "parent": "517", "text": "  " },
                { "id": "564", "parent": "517", "text": "    public ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>> getPosouzeni(){" },
                { "id": "565", "parent": "517", "text": "        " },
                { "id": "566", "parent": "517", "text": "        return(posouzeniPismenePngVsechRadkuKeVsemPismenABC);" },
                { "id": "567", "parent": "517", "text": "        " },
                { "id": "568", "parent": "517", "text": "    }" },
                { "id": "569", "parent": "517", "text": "    " },
                { "id": "570", "parent": "517", "text": "    //porovna vybrane pismeno z png se vsema pismenama z abecedy" },
                { "id": "571", "parent": "517", "text": "    private ArrayList<HashMap<String, Double>> provedPosouzeniProVsechnaPismenaAbecedy(ArrayList<HashMap<String, Integer>> MapaPismenePng, ArrayList<ArrayList<HashMap<String, Integer>>> MapaPismenAbeceda){" },
                { "id": "572", "parent": "517", "text": "        " },
                { "id": "573", "parent": "517", "text": "        //data obdsahuji posouzeni jednoho pismene z obrazku vuci vsem pismenum abecedy, ten s nejmensi odchylkaSqrt vyhrava" },
                { "id": "574", "parent": "517", "text": "        ArrayList<HashMap<String, Double>> posouzeniJednohoPismenePngKeVsemPismenABC = new ArrayList<HashMap<String, Double>>();" },
                { "id": "575", "parent": "517", "text": "        " },
                { "id": "576", "parent": "517", "text": "        ArrayList<HashMap<String, Integer>> MapaPismeneZAbecedy = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "577", "parent": "517", "text": "        HashMap<String, Double> posouzeniJednohoPismeneABC = new HashMap<String, Double>();" },
                { "id": "578", "parent": "517", "text": "        " },
                { "id": "579", "parent": "517", "text": "        " },
                { "id": "580", "parent": "517", "text": "        for (int i = 0; i < MapaPismenAbeceda.size(); i++) {" },
                { "id": "581", "parent": "517", "text": "            MapaPismeneZAbecedy = MapaPismenAbeceda.get(i);" },
                { "id": "582", "parent": "517", "text": "            " },
                { "id": "583", "parent": "517", "text": "            posouzeniJednohoPismeneABC = vratPosouzeniTamANazpet(MapaPismenePng, MapaPismeneZAbecedy);" },
                { "id": "584", "parent": "517", "text": "            posouzeniJednohoPismenePngKeVsemPismenABC.add(posouzeniJednohoPismeneABC);" },
                { "id": "585", "parent": "517", "text": "        }" },
                { "id": "586", "parent": "517", "text": "        " },
                { "id": "587", "parent": "517", "text": "        return (posouzeniJednohoPismenePngKeVsemPismenABC);" },
                { "id": "588", "parent": "517", "text": "   " },
                { "id": "589", "parent": "517", "text": "    }" },
                { "id": "590", "parent": "517", "text": "    " },
                { "id": "591", "parent": "517", "text": "    " },
                { "id": "592", "parent": "517", "text": "    //posouzeni tam a nazpet" },
                { "id": "593", "parent": "517", "text": "    private HashMap<String, Double> vratPosouzeniTamANazpet(ArrayList<HashMap<String, Integer>> MapaPismenePng, ArrayList<HashMap<String, Integer>> MapaPismeneAbeceda){" },
                { "id": "594", "parent": "517", "text": "    " },
                { "id": "595", "parent": "517", "text": "        //porovna jeden pixel zkoumaneho pismena ke vsem pixelum pismena abecedy" },
                { "id": "596", "parent": "517", "text": "        HashMap<String, Double> posouzeniTam = new HashMap<String, Double>();" },
                { "id": "597", "parent": "517", "text": "        " },
                { "id": "598", "parent": "517", "text": "        //porovna jeden pixel pismena abecedy ke vsem pixelum zkoumaneho pismena" },
                { "id": "599", "parent": "517", "text": "        HashMap<String, Double> posouzeniZpet = new HashMap<String, Double>();" },
                { "id": "600", "parent": "517", "text": "        " },
                { "id": "601", "parent": "517", "text": "        //vraci to posouzeni, ktere je z obou smeru maximalni (porovnava pouze odchylkuSqrt)" },
                { "id": "602", "parent": "517", "text": "        HashMap<String, Double> posouzeniMax = new HashMap<String, Double>();" },
                { "id": "603", "parent": "517", "text": "        " },
                { "id": "604", "parent": "517", "text": "        double odchylkaSqrtTam;" },
                { "id": "605", "parent": "517", "text": "        double odchylkaSqrtZpet;" },
                { "id": "606", "parent": "517", "text": "        " },
                { "id": "607", "parent": "517", "text": "        posouzeniTam = vratPosouzeni(MapaPismenePng, MapaPismeneAbeceda);" },
                { "id": "608", "parent": "517", "text": "        posouzeniZpet = vratPosouzeni(MapaPismeneAbeceda, MapaPismenePng); " },
                { "id": "609", "parent": "517", "text": "        " },
                { "id": "610", "parent": "517", "text": "        odchylkaSqrtTam = posouzeniTam.get('odchylkaSqrt');" },
                { "id": "611", "parent": "517", "text": "        odchylkaSqrtZpet = posouzeniZpet.get('odchylkaSqrt');" },
                { "id": "612", "parent": "517", "text": "        " },
                { "id": "613", "parent": "517", "text": "        " },
                { "id": "614", "parent": "517", "text": "        if(odchylkaSqrtTam > odchylkaSqrtZpet){" },
                { "id": "615", "parent": "517", "text": "            posouzeniMax = posouzeniTam;" },
                { "id": "616", "parent": "517", "text": "        }" },
                { "id": "617", "parent": "517", "text": "        else {" },
                { "id": "618", "parent": "517", "text": "            posouzeniMax = posouzeniZpet;" },
                { "id": "619", "parent": "517", "text": "        }" },
                { "id": "620", "parent": "517", "text": "        " },
                { "id": "621", "parent": "517", "text": "        " },
                { "id": "622", "parent": "517", "text": "        return(posouzeniMax);" },
                { "id": "623", "parent": "517", "text": "        " },
                { "id": "624", "parent": "517", "text": "    }" },
                { "id": "625", "parent": "517", "text": "" },
                { "id": "626", "parent": "517", "text": "   " },
                { "id": "627", "parent": "517", "text": "    //zkusit volat metodu taky obracene" },
                { "id": "628", "parent": "517", "text": "    private HashMap<String, Double> vratPosouzeni(ArrayList<HashMap<String, Integer>> MapaPismenePng, ArrayList<HashMap<String, Integer>> MapaPismeneAbeceda){" },
                { "id": "629", "parent": "517", "text": "        " },
                { "id": "630", "parent": "517", "text": "        //MapaPismenePng obsahuje pouze jedno pismeno z png" },
                { "id": "631", "parent": "517", "text": "        //MapaPismeneAbeceda obsahuje pouze jedno pismeno z abecedy" },
                { "id": "632", "parent": "517", "text": "        " },
                { "id": "633", "parent": "517", "text": "        int xABC;" },
                { "id": "634", "parent": "517", "text": "        int yABC;" },
                { "id": "635", "parent": "517", "text": "        " },
                { "id": "636", "parent": "517", "text": "        double prumerRozdiluX;" },
                { "id": "637", "parent": "517", "text": "        double prumerRozdiluY;" },
                { "id": "638", "parent": "517", "text": "        " },
                { "id": "639", "parent": "517", "text": "        double odchylkaOdPrumeruX = 0;" },
                { "id": "640", "parent": "517", "text": "        double odchylkaOdPrumeruY = 0;" },
                { "id": "641", "parent": "517", "text": "        " },
                { "id": "642", "parent": "517", "text": "        double odchylkaOdPrumeruXprumer;" },
                { "id": "643", "parent": "517", "text": "        double odchylkaOdPrumeruYprumer;" },
                { "id": "644", "parent": "517", "text": "        " },
                { "id": "645", "parent": "517", "text": "        double odchylkaSqrt;" },
                { "id": "646", "parent": "517", "text": "        " },
                { "id": "647", "parent": "517", "text": "        " },
                { "id": "648", "parent": "517", "text": "        HashMap<String, Integer> RGBabc = new HashMap<String, Integer>();" },
                { "id": "649", "parent": "517", "text": "        HashMap<String, Integer> nejblizsiSouradnice = new HashMap<String, Integer>();" },
                { "id": "650", "parent": "517", "text": "        HashMap<String, Double> posouzeni = new HashMap<String, Double>();" },
                { "id": "651", "parent": "517", "text": "        " },
                { "id": "652", "parent": "517", "text": "        //obsahuje nejblizsi souradnice z png vztazene ke kazde sozradnici v abc" },
                { "id": "653", "parent": "517", "text": "        ArrayList<HashMap<String, Integer>> nejblizsiSouradniceVsechPixeluABC = new ArrayList<HashMap<String, Integer>>();" },
                { "id": "654", "parent": "517", "text": "        " },
                { "id": "655", "parent": "517", "text": "        " },
                { "id": "656", "parent": "517", "text": "        //sestavi pole nejblizsiSouradniceVsechPixeluABC" },
                { "id": "657", "parent": "517", "text": "        for (int i = 0; i < MapaPismeneAbeceda.size(); i++) {" },
                { "id": "658", "parent": "517", "text": "            " },
                { "id": "659", "parent": "517", "text": "            RGBabc = MapaPismeneAbeceda.get(i);" },
                { "id": "660", "parent": "517", "text": "            " },
                { "id": "661", "parent": "517", "text": "            try {" },
                { "id": "662", "parent": "517", "text": "                xABC = RGBabc.get('x');" },
                { "id": "663", "parent": "517", "text": "                yABC = RGBabc.get('y');" },
                { "id": "664", "parent": "517", "text": "                " },
                { "id": "665", "parent": "517", "text": "                nejblizsiSouradnice = vratNejblizsiSouradnici(MapaPismenePng, xABC, yABC);" },
                { "id": "666", "parent": "517", "text": "                nejblizsiSouradniceVsechPixeluABC.add(nejblizsiSouradnice);" },
                { "id": "667", "parent": "517", "text": "                " },
                { "id": "668", "parent": "517", "text": "            }" },
                { "id": "669", "parent": "517", "text": "            " },
                { "id": "670", "parent": "517", "text": "            catch(Exception e){" },
                { "id": "671", "parent": "517", "text": "                System.out.println(e);" },
                { "id": "672", "parent": "517", "text": "            }" },
                { "id": "673", "parent": "517", "text": "  " },
                { "id": "674", "parent": "517", "text": "        } " },
                { "id": "675", "parent": "517", "text": "        " },
                { "id": "676", "parent": "517", "text": "        " },
                { "id": "677", "parent": "517", "text": "        //dopocita prumerny rozdil X a Y" },
                { "id": "678", "parent": "517", "text": "        prumerRozdiluX = vratPrumernouHodnotuRozdiluSouradnic(nejblizsiSouradniceVsechPixeluABC, 'x');" },
                { "id": "679", "parent": "517", "text": "        prumerRozdiluY = vratPrumernouHodnotuRozdiluSouradnic(nejblizsiSouradniceVsechPixeluABC, 'y');" },
                { "id": "680", "parent": "517", "text": "        " },
                { "id": "681", "parent": "517", "text": "        odchylkaOdPrumeruX = vratOdchylkuOdPrumeru(nejblizsiSouradniceVsechPixeluABC, 'x', prumerRozdiluX);" },
                { "id": "682", "parent": "517", "text": "        odchylkaOdPrumeruY = vratOdchylkuOdPrumeru(nejblizsiSouradniceVsechPixeluABC, 'y', prumerRozdiluY);" },
                { "id": "683", "parent": "517", "text": "        " },
                { "id": "684", "parent": "517", "text": "        odchylkaOdPrumeruXprumer = odchylkaOdPrumeruX * prumerRozdiluX;" },
                { "id": "685", "parent": "517", "text": "        odchylkaOdPrumeruYprumer = odchylkaOdPrumeruY * prumerRozdiluY;" },
                { "id": "686", "parent": "517", "text": "        " },
                { "id": "687", "parent": "517", "text": "        odchylkaSqrt = sqrt(odchylkaOdPrumeruXprumer + odchylkaOdPrumeruYprumer);" },
                { "id": "688", "parent": "517", "text": "        " },
                { "id": "689", "parent": "517", "text": "        " },
                { "id": "690", "parent": "517", "text": "        posouzeni.put('prumerRozdiluX', prumerRozdiluX);" },
                { "id": "691", "parent": "517", "text": "        posouzeni.put('prumerRozdiluY', prumerRozdiluY);" },
                { "id": "692", "parent": "517", "text": "        posouzeni.put('odchylkaOdPrumeruX', odchylkaOdPrumeruX);" },
                { "id": "693", "parent": "517", "text": "        posouzeni.put('odchylkaOdPrumeruY', odchylkaOdPrumeruY);" },
                { "id": "694", "parent": "517", "text": "        posouzeni.put('odchylkaOdPrumeruXprumer', odchylkaOdPrumeruXprumer);" },
                { "id": "695", "parent": "517", "text": "        posouzeni.put('odchylkaOdPrumeruYprumer', odchylkaOdPrumeruYprumer);" },
                { "id": "696", "parent": "517", "text": "        posouzeni.put('odchylkaSqrt', odchylkaSqrt);" },
                { "id": "697", "parent": "517", "text": "        " },
                { "id": "698", "parent": "517", "text": "        " },
                { "id": "699", "parent": "517", "text": "        return(posouzeni);" },
                { "id": "700", "parent": "517", "text": "    }" },
                { "id": "701", "parent": "517", "text": "    " },
                { "id": "702", "parent": "517", "text": "    " },
                { "id": "703", "parent": "517", "text": "    " },
                { "id": "704", "parent": "517", "text": "    " },
                { "id": "705", "parent": "517", "text": "    private HashMap<String, Integer> vratNejblizsiSouradnici(ArrayList<HashMap<String, Integer>> MapaPismenePng, int xABC, int yABC){" },
                { "id": "706", "parent": "517", "text": "        " },
                { "id": "707", "parent": "517", "text": "        int xPng = -999;" },
                { "id": "708", "parent": "517", "text": "        int yPng = -999;" },
                { "id": "709", "parent": "517", "text": "        " },
                { "id": "710", "parent": "517", "text": "        int rozdilX;" },
                { "id": "711", "parent": "517", "text": "        int rozdilY;" },
                { "id": "712", "parent": "517", "text": "        " },
                { "id": "713", "parent": "517", "text": "        int xPngMin = -999;" },
                { "id": "714", "parent": "517", "text": "        int yPngMin = -999;" },
                { "id": "715", "parent": "517", "text": "        " },
                { "id": "716", "parent": "517", "text": "        double rozdil;" },
                { "id": "717", "parent": "517", "text": "        double rozdilMin = 999;" },
                { "id": "718", "parent": "517", "text": "        " },
                { "id": "719", "parent": "517", "text": "        int indexSNejblizsiSouradnici = -1;" },
                { "id": "720", "parent": "517", "text": "        boolean prvniCyklus = true;" },
                { "id": "721", "parent": "517", "text": "        " },
                { "id": "722", "parent": "517", "text": "        HashMap<String, Integer> RGBpng = new HashMap<String, Integer>();" },
                { "id": "723", "parent": "517", "text": "        HashMap<String, Integer> nejblizsiSouradnice = new HashMap<String, Integer>();" },
                { "id": "724", "parent": "517", "text": "        " },
                { "id": "725", "parent": "517", "text": "        for (int i = 0; i < MapaPismenePng.size(); i++) {" },
                { "id": "726", "parent": "517", "text": "            " },
                { "id": "727", "parent": "517", "text": "            System.out.print('');" },
                { "id": "728", "parent": "517", "text": "            " },
                { "id": "729", "parent": "517", "text": "            RGBpng = MapaPismenePng.get(i);" },
                { "id": "730", "parent": "517", "text": "            " },
                { "id": "731", "parent": "517", "text": "            try{" },
                { "id": "732", "parent": "517", "text": "               " },
                { "id": "733", "parent": "517", "text": "                xPng = RGBpng.get('x');" },
                { "id": "734", "parent": "517", "text": "                yPng = RGBpng.get('y');" },
                { "id": "735", "parent": "517", "text": "" },
                { "id": "736", "parent": "517", "text": "                rozdilX = abs(xPng - xABC);" },
                { "id": "737", "parent": "517", "text": "                rozdilY = abs(yPng - yABC);" },
                { "id": "738", "parent": "517", "text": "                " },
                { "id": "739", "parent": "517", "text": "                rozdil = sqrt(rozdilX*rozdilX + rozdilY*rozdilY);" },
                { "id": "740", "parent": "517", "text": "" },
                { "id": "741", "parent": "517", "text": "                if(prvniCyklus == true){" },
                { "id": "742", "parent": "517", "text": "                    rozdilMin = rozdil;" },
                { "id": "743", "parent": "517", "text": "                    indexSNejblizsiSouradnici = i;" },
                { "id": "744", "parent": "517", "text": "                    xPngMin = xPng;" },
                { "id": "745", "parent": "517", "text": "                    yPngMin = yPng;" },
                { "id": "746", "parent": "517", "text": "                    " },
                { "id": "747", "parent": "517", "text": "                    prvniCyklus = false;" },
                { "id": "748", "parent": "517", "text": "                }" },
                { "id": "749", "parent": "517", "text": "                else {" },
                { "id": "750", "parent": "517", "text": "                    if(rozdil < rozdilMin){" },
                { "id": "751", "parent": "517", "text": "                        rozdilMin = rozdil;" },
                { "id": "752", "parent": "517", "text": "                        indexSNejblizsiSouradnici = i;" },
                { "id": "753", "parent": "517", "text": "                        xPngMin = xPng;" },
                { "id": "754", "parent": "517", "text": "                        yPngMin = yPng;" },
                { "id": "755", "parent": "517", "text": "                    }" },
                { "id": "756", "parent": "517", "text": "                }" },
                { "id": "757", "parent": "517", "text": "            }" },
                { "id": "758", "parent": "517", "text": "            catch(Exception e){" },
                { "id": "759", "parent": "517", "text": "                System.out.println(e);" },
                { "id": "760", "parent": "517", "text": "            }" },
                { "id": "761", "parent": "517", "text": "        }" },
                { "id": "762", "parent": "517", "text": "        " },
                { "id": "763", "parent": "517", "text": "  " },
                { "id": "764", "parent": "517", "text": "        nejblizsiSouradnice = vratMapuNejblizsiSouradnice(xPngMin, yPngMin, xABC, yABC);" },
                { "id": "765", "parent": "517", "text": "        " },
                { "id": "766", "parent": "765", "text": "    private HashMap<String, Integer> vratMapuNejblizsiSouradnice(int xPng, int yPng, int xABC, int yABC){" },
                { "id": "767", "parent": "765", "text": "        " },
                { "id": "768", "parent": "765", "text": "        HashMap<String, Integer> nejblizsiSouradnice = new HashMap<String, Integer>();" },
                { "id": "769", "parent": "765", "text": "        " },
                { "id": "770", "parent": "765", "text": "        int rozdilX;" },
                { "id": "771", "parent": "765", "text": "        int rozdilY;" },
                { "id": "772", "parent": "765", "text": "        " },
                { "id": "773", "parent": "765", "text": "        rozdilX = abs(xABC - xPng);" },
                { "id": "774", "parent": "765", "text": "        rozdilY = abs(yABC - yPng);" },
                { "id": "775", "parent": "765", "text": "        " },
                { "id": "776", "parent": "765", "text": "        nejblizsiSouradnice.put('xPng', xPng);" },
                { "id": "777", "parent": "765", "text": "        nejblizsiSouradnice.put('yPng', yPng);" },
                { "id": "778", "parent": "765", "text": "        nejblizsiSouradnice.put('xABC', xABC);" },
                { "id": "779", "parent": "765", "text": "        nejblizsiSouradnice.put('yABC', yABC);" },
                { "id": "780", "parent": "765", "text": "        nejblizsiSouradnice.put('rozdilX', rozdilX);" },
                { "id": "781", "parent": "765", "text": "        nejblizsiSouradnice.put('rozdilY', rozdilY);" },
                { "id": "782", "parent": "765", "text": "        " },
                { "id": "783", "parent": "765", "text": "        return (nejblizsiSouradnice);" },
                { "id": "784", "parent": "765", "text": "        " },
                { "id": "785", "parent": "517", "text": "        return (nejblizsiSouradnice);" },
                { "id": "786", "parent": "517", "text": "        " },
                { "id": "787", "parent": "517", "text": "    }" },
                { "id": "788", "parent": "517", "text": "    " },
                { "id": "789", "parent": "517", "text": "    " },
                { "id": "790", "parent": "517", "text": "    private HashMap<String, Integer> vratMapuNejblizsiSouradnice(int xPng, int yPng, int xABC, int yABC){" },
                { "id": "791", "parent": "517", "text": "        " },
                { "id": "792", "parent": "517", "text": "        HashMap<String, Integer> nejblizsiSouradnice = new HashMap<String, Integer>();" },
                { "id": "793", "parent": "517", "text": "        " },
                { "id": "794", "parent": "517", "text": "        int rozdilX;" },
                { "id": "795", "parent": "517", "text": "        int rozdilY;" },
                { "id": "796", "parent": "517", "text": "        " },
                { "id": "797", "parent": "517", "text": "        rozdilX = abs(xABC - xPng);" },
                { "id": "798", "parent": "517", "text": "        rozdilY = abs(yABC - yPng);" },
                { "id": "799", "parent": "517", "text": "        " },
                { "id": "800", "parent": "517", "text": "        nejblizsiSouradnice.put('xPng', xPng);" },
                { "id": "801", "parent": "517", "text": "        nejblizsiSouradnice.put('yPng', yPng);" },
                { "id": "802", "parent": "517", "text": "        nejblizsiSouradnice.put('xABC', xABC);" },
                { "id": "803", "parent": "517", "text": "        nejblizsiSouradnice.put('yABC', yABC);" },
                { "id": "804", "parent": "517", "text": "        nejblizsiSouradnice.put('rozdilX', rozdilX);" },
                { "id": "805", "parent": "517", "text": "        nejblizsiSouradnice.put('rozdilY', rozdilY);" },
                { "id": "806", "parent": "517", "text": "        " },
                { "id": "807", "parent": "517", "text": "        return (nejblizsiSouradnice);" },
                { "id": "808", "parent": "517", "text": "        " },
                { "id": "809", "parent": "517", "text": "    }" },
                { "id": "810", "parent": "517", "text": "    " },
                { "id": "811", "parent": "517", "text": "    " },
                { "id": "812", "parent": "517", "text": "    private double vratPrumernouHodnotuRozdiluSouradnic(ArrayList<HashMap<String, Integer>> nejblizsiSouradniceVsechPixeluABC, String XneboY){" },
                { "id": "813", "parent": "517", "text": "        " },
                { "id": "814", "parent": "517", "text": "        HashMap<String, Integer> RGBrozdilySour = new HashMap<String, Integer>();" },
                { "id": "815", "parent": "517", "text": "        int rozdilSour;" },
                { "id": "816", "parent": "517", "text": "        int rozdilSourSuma = 0;" },
                { "id": "817", "parent": "517", "text": "        " },
                { "id": "818", "parent": "517", "text": "        double rozdilSourSumaDbl;" },
                { "id": "819", "parent": "517", "text": "        double pocetHodnotDbl;" },
                { "id": "820", "parent": "517", "text": "        double rozdilSourPrumerDbl;" },
                { "id": "821", "parent": "517", "text": "        " },
                { "id": "822", "parent": "517", "text": "        for (int i = 0; i < nejblizsiSouradniceVsechPixeluABC.size(); i++) {" },
                { "id": "823", "parent": "517", "text": "            " },
                { "id": "824", "parent": "517", "text": "            RGBrozdilySour = nejblizsiSouradniceVsechPixeluABC.get(i);" },
                { "id": "825", "parent": "517", "text": "            " },
                { "id": "826", "parent": "517", "text": "            if(XneboY == 'x'){" },
                { "id": "827", "parent": "517", "text": "                rozdilSour = RGBrozdilySour.get('rozdilX');" },
                { "id": "828", "parent": "517", "text": "            }" },
                { "id": "829", "parent": "517", "text": "            else {" },
                { "id": "830", "parent": "517", "text": "                rozdilSour = RGBrozdilySour.get('rozdilY');" },
                { "id": "831", "parent": "517", "text": "            }" },
                { "id": "832", "parent": "517", "text": "            " },
                { "id": "833", "parent": "517", "text": "            rozdilSourSuma = rozdilSourSuma + rozdilSour;" },
                { "id": "834", "parent": "517", "text": "            " },
                { "id": "835", "parent": "517", "text": "        }" },
                { "id": "836", "parent": "517", "text": "        " },
                { "id": "837", "parent": "517", "text": " " },
                { "id": "838", "parent": "517", "text": "        rozdilSourSumaDbl = rozdilSourSuma;" },
                { "id": "839", "parent": "517", "text": "        pocetHodnotDbl = nejblizsiSouradniceVsechPixeluABC.size();" },
                { "id": "840", "parent": "517", "text": "        rozdilSourPrumerDbl = rozdilSourSumaDbl/pocetHodnotDbl;" },
                { "id": "841", "parent": "517", "text": "        " },
                { "id": "842", "parent": "517", "text": "        " },
                { "id": "843", "parent": "517", "text": "        return(rozdilSourPrumerDbl);" },
                { "id": "844", "parent": "517", "text": "            " },
                { "id": "845", "parent": "517", "text": "    }" },
                { "id": "846", "parent": "517", "text": "    " },
                { "id": "847", "parent": "517", "text": "    private double vratOdchylkuOdPrumeru(ArrayList<HashMap<String, Integer>> nejblizsiSouradniceVsechPixeluABC, String XneboY, double prumer){" },
                { "id": "848", "parent": "517", "text": "        " },
                { "id": "849", "parent": "517", "text": "        HashMap<String, Integer> RGBrozdilySour = new HashMap<String, Integer>();" },
                { "id": "850", "parent": "517", "text": "        double maximalniRozdil = 0;" },
                { "id": "851", "parent": "517", "text": "        double Rozdil = 0;" },
                { "id": "852", "parent": "517", "text": "        double odchylkaOdPrumeru;" },
                { "id": "853", "parent": "517", "text": "    " },
                { "id": "854", "parent": "517", "text": "        " },
                { "id": "855", "parent": "517", "text": "        for (int i = 0; i < nejblizsiSouradniceVsechPixeluABC.size(); i++) {" },
                { "id": "856", "parent": "517", "text": "            " },
                { "id": "857", "parent": "517", "text": "            RGBrozdilySour = nejblizsiSouradniceVsechPixeluABC.get(i);" },
                { "id": "858", "parent": "517", "text": "            " },
                { "id": "859", "parent": "517", "text": "            if(XneboY == 'x'){" },
                { "id": "860", "parent": "517", "text": "                Rozdil = RGBrozdilySour.get('rozdilX');" },
                { "id": "861", "parent": "517", "text": "            }" },
                { "id": "862", "parent": "517", "text": "            else {" },
                { "id": "863", "parent": "517", "text": "                Rozdil = RGBrozdilySour.get('rozdilY');" },
                { "id": "864", "parent": "517", "text": "            }" },
                { "id": "865", "parent": "517", "text": "            " },
                { "id": "866", "parent": "517", "text": "            if(Rozdil > maximalniRozdil){" },
                { "id": "867", "parent": "517", "text": "                maximalniRozdil = Rozdil; " },
                { "id": "868", "parent": "517", "text": "            }" },
                { "id": "869", "parent": "517", "text": "            " },
                { "id": "870", "parent": "517", "text": "        }" },
                { "id": "871", "parent": "517", "text": "        " },
                { "id": "872", "parent": "517", "text": "        odchylkaOdPrumeru = abs(maximalniRozdil - prumer);" },
                { "id": "873", "parent": "517", "text": "        " },
                { "id": "874", "parent": "517", "text": "        return(odchylkaOdPrumeru);" },
                { "id": "875", "parent": "517", "text": "        " },
                { "id": "876", "parent": "517", "text": "    } " },
                { "id": "877", "parent": "517", "text": "    " },
                { "id": "878", "parent": "0", "text": "       posouzeniPismenePngVsechRadkuKeVsemPismenABC = posouzeni.getPosouzeni();" },
                { "id": "879", "parent": "878", "text": "    public ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>> getPosouzeni(){" },
                { "id": "880", "parent": "878", "text": "        " },
                { "id": "881", "parent": "878", "text": "        return(posouzeniPismenePngVsechRadkuKeVsemPismenABC);" },
                { "id": "882", "parent": "878", "text": "        " },
                { "id": "883", "parent": "0", "text": "       " },
                { "id": "884", "parent": "0", "text": "       PorovnaniSouradnic porovnani = new PorovnaniSouradnic(posouzeniPismenePngVsechRadkuKeVsemPismenABC, adresaProjektu);" },
                { "id": "885", "parent": "0", "text": "       pismenaVPng = porovnani.getPismenaVPng();" },
                { "id": "886", "parent": "885", "text": "    " },
                { "id": "887", "parent": "885", "text": "    //data obdsahuji posouzeni vsech pismen vsech radku z obrazku vuci vsem pismenum abecedy" },
                { "id": "888", "parent": "885", "text": "    ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>> posouzeniPismenePngVsechRadkuKeVsemPismenumABC = new ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>>();" },
                { "id": "889", "parent": "885", "text": "    " },
                { "id": "890", "parent": "885", "text": "    //obshuje pole pismen v celem obrazku - radcich + sloupcich" },
                { "id": "891", "parent": "885", "text": "    ArrayList<ArrayList<String>> pismenaVPng = new ArrayList<ArrayList<String>>();" },
                { "id": "892", "parent": "885", "text": "    " },
                { "id": "893", "parent": "885", "text": "    public PorovnaniSouradnic(ArrayList<ArrayList<ArrayList<HashMap<String, Double>>>> posouzeniPismenePngVsechRadkuKeVsemPismenABC, String adresaProjektu){" },
                { "id": "894", "parent": "885", "text": "        " },
                { "id": "895", "parent": "885", "text": "        //data obsahuji posouzeni vsech pismen jednoho radku z obrazku vuci vsem pismenum abecedy" },
                { "id": "896", "parent": "885", "text": "        ArrayList<ArrayList<HashMap<String, Double>>> posouzeniPismenePngJednohoRadkuKeVsemPismenABC = new ArrayList<ArrayList<HashMap<String, Double>>>();" },
                { "id": "897", "parent": "885", "text": "        " },
                { "id": "898", "parent": "885", "text": "        //data obsahuji posouzeni jednoho pismene z obrazku vuci vsem pismenum abecedy, ten s nejmensi odchylkaSqrt vyhrava" },
                { "id": "899", "parent": "885", "text": "        ArrayList<HashMap<String, Double>> posouzeniJednohoPismenePngKeVsemPismenumABC = new ArrayList<HashMap<String, Double>>();" },
                { "id": "900", "parent": "885", "text": "        " },
                { "id": "901", "parent": "885", "text": "        //obshuje pole pismen na radku" },
                { "id": "902", "parent": "885", "text": "        ArrayList<String> pismenaNaRadku = null;" },
                { "id": "903", "parent": "885", "text": "        " },
                { "id": "904", "parent": "885", "text": "" },
                { "id": "905", "parent": "885", "text": "         " },
                { "id": "906", "parent": "885", "text": "        //nazvy pismen" },
                { "id": "907", "parent": "885", "text": "        String[] NazvySouboruPng;" },
                { "id": "908", "parent": "885", "text": "        " },
                { "id": "909", "parent": "885", "text": "        String pismeno;" },
                { "id": "910", "parent": "885", "text": "        " },
                { "id": "911", "parent": "885", "text": "        zdrojDataAbeceda pismenaABC = new zdrojDataAbeceda(adresaProjektu);" },
                { "id": "912", "parent": "885", "text": "        NazvySouboruPng = pismenaABC.getNazvySouboruPng();" },
                { "id": "913", "parent": "885", "text": "        " },
                { "id": "914", "parent": "885", "text": "        this.posouzeniPismenePngVsechRadkuKeVsemPismenumABC = posouzeniPismenePngVsechRadkuKeVsemPismenABC;" },
                { "id": "915", "parent": "885", "text": "        " },
                { "id": "916", "parent": "885", "text": "        for (int r = 0; r < posouzeniPismenePngVsechRadkuKeVsemPismenumABC.size(); r++) {" },
                { "id": "917", "parent": "885", "text": "            posouzeniPismenePngJednohoRadkuKeVsemPismenABC = posouzeniPismenePngVsechRadkuKeVsemPismenumABC.get(r);" },
                { "id": "918", "parent": "885", "text": "            pismenaNaRadku = new ArrayList<String>();" },
                { "id": "919", "parent": "885", "text": "            " },
                { "id": "920", "parent": "885", "text": "            for (int s = 0; s < posouzeniPismenePngJednohoRadkuKeVsemPismenABC.size(); s++) {" },
                { "id": "921", "parent": "885", "text": "                posouzeniJednohoPismenePngKeVsemPismenumABC = posouzeniPismenePngJednohoRadkuKeVsemPismenABC.get(s);" },
                { "id": "922", "parent": "885", "text": "        " },
                { "id": "923", "parent": "885", "text": "                pismeno = vratOdpovidajiciPismena(posouzeniJednohoPismenePngKeVsemPismenumABC, NazvySouboruPng);" },
                { "id": "924", "parent": "885", "text": "                pismenaNaRadku.add(pismeno);" },
                { "id": "925", "parent": "885", "text": "            } " },
                { "id": "926", "parent": "885", "text": "            " },
                { "id": "927", "parent": "885", "text": "            pismenaVPng.add(pismenaNaRadku);" },
                { "id": "928", "parent": "885", "text": "            System.out.print('');" },
                { "id": "929", "parent": "885", "text": "        }   " },
                { "id": "930", "parent": "885", "text": "        " },
                { "id": "931", "parent": "885", "text": "        System.out.print('');" },
                { "id": "932", "parent": "885", "text": "    }" },
                { "id": "933", "parent": "885", "text": "    " },
                { "id": "934", "parent": "885", "text": "    " },
                { "id": "935", "parent": "885", "text": "    public ArrayList<ArrayList<String>> getPismenaVPng(){" },
                { "id": "936", "parent": "885", "text": "        return(pismenaVPng);" },
                { "id": "937", "parent": "885", "text": "    }" },
                { "id": "938", "parent": "885", "text": "    " },
                { "id": "939", "parent": "885", "text": "    private String vratOdpovidajiciPismena(ArrayList<HashMap<String, Double>> posouzeniVsechPismenPngKeVsemPismenumABC, String[] NazvySouboruPng){" },
                { "id": "940", "parent": "885", "text": "        " },
                { "id": "941", "parent": "885", "text": "        double nejmensiHodnota = -999;" },
                { "id": "942", "parent": "885", "text": "        double posuzovanaHodnota;" },
                { "id": "943", "parent": "885", "text": "        int indexOdpovidajicihoPismene = -1;" },
                { "id": "944", "parent": "885", "text": "        String pismeno;" },
                { "id": "945", "parent": "885", "text": "        " },
                { "id": "946", "parent": "885", "text": "        HashMap<String, Double> posouzeniJednohoPismenePngKeVsemPismenumABC = new HashMap<String, Double>();" },
                { "id": "947", "parent": "885", "text": "        HashMap<String, Double> posouzeniData = new HashMap<String, Double>();" },
                { "id": "948", "parent": "885", "text": "      " },
                { "id": "949", "parent": "885", "text": "        for (int i = 0; i < posouzeniVsechPismenPngKeVsemPismenumABC.size(); i++) {" },
                { "id": "950", "parent": "885", "text": "            posouzeniJednohoPismenePngKeVsemPismenumABC = posouzeniVsechPismenPngKeVsemPismenumABC.get(i);" },
                { "id": "951", "parent": "885", "text": "            posuzovanaHodnota = posouzeniJednohoPismenePngKeVsemPismenumABC.get('odchylkaSqrt');" },
                { "id": "952", "parent": "885", "text": "      " },
                { "id": "953", "parent": "885", "text": "            if(i == 0){" },
                { "id": "954", "parent": "885", "text": "                nejmensiHodnota = posuzovanaHodnota;" },
                { "id": "955", "parent": "885", "text": "                indexOdpovidajicihoPismene = i;" },
                { "id": "956", "parent": "885", "text": "            }" },
                { "id": "957", "parent": "885", "text": "            else {" },
                { "id": "958", "parent": "885", "text": "                if(posuzovanaHodnota < nejmensiHodnota){" },
                { "id": "959", "parent": "885", "text": "                    nejmensiHodnota = posuzovanaHodnota;" },
                { "id": "960", "parent": "885", "text": "                    indexOdpovidajicihoPismene = i;" },
                { "id": "961", "parent": "885", "text": "                }" },
                { "id": "962", "parent": "885", "text": "            }" },
                { "id": "963", "parent": "885", "text": "            System.out.print('');" },
                { "id": "964", "parent": "885", "text": "        }" },
                { "id": "965", "parent": "885", "text": "        " },
                { "id": "966", "parent": "885", "text": "        " },
                { "id": "967", "parent": "885", "text": "        if(indexOdpovidajicihoPismene > -1){" },
                { "id": "968", "parent": "885", "text": "            pismeno = vratOdpovidajiciPismeno(NazvySouboruPng, indexOdpovidajicihoPismene);" },
                { "id": "969", "parent": "885", "text": "        }" },
                { "id": "970", "parent": "885", "text": "        else {" },
                { "id": "971", "parent": "885", "text": "            pismeno = 'Err';" },
                { "id": "972", "parent": "885", "text": "        }" },
                { "id": "973", "parent": "885", "text": "        " },
                { "id": "974", "parent": "885", "text": "        return (pismeno);" },
                { "id": "975", "parent": "885", "text": "        " },
                { "id": "976", "parent": "885", "text": "    }" },
                { "id": "977", "parent": "885", "text": "    " },
                { "id": "978", "parent": "885", "text": "    " },
                { "id": "979", "parent": "885", "text": "    private String vratOdpovidajiciPismeno(String[] NazvySouboruPng, int indexOdpovidajicihoPismene){" },
                { "id": "980", "parent": "885", "text": "        " },
                { "id": "981", "parent": "885", "text": "        String nazevSouboru;" },
                { "id": "982", "parent": "885", "text": "        String pismeno;" },
                { "id": "983", "parent": "885", "text": "        String[] splitArr;" },
                { "id": "984", "parent": "885", "text": "        " },
                { "id": "985", "parent": "885", "text": "        nazevSouboru = NazvySouboruPng[indexOdpovidajicihoPismene];" },
                { "id": "986", "parent": "885", "text": "        splitArr = nazevSouboru.split('\\.');" },
                { "id": "987", "parent": "885", "text": "        pismeno = splitArr[0];" },
                { "id": "988", "parent": "885", "text": "        " },
                { "id": "989", "parent": "885", "text": "        return(pismeno);" },
                { "id": "990", "parent": "885", "text": "    }" },
                { "id": "991", "parent": "885", "text": "" },
                { "id": "992", "parent": "885", "text": "    " },
                { "id": "993", "parent": "0", "text": "       System.out.print('');" },
                { "id": "994", "parent": "0", "text": "       " },
                { "id": "995", "parent": "0", "text": "       " },
                { "id": "996", "parent": "0", "text": "       createOutput vytvorVystup = new createOutput(pismenaVPng, adresaProjektu, '\\InputOutput\\outputs\\output.csv');" },
                { "id": "997", "parent": "0", "text": "       " },
                { "id": "998", "parent": "0", "text": "       " },
                { "id": "999", "parent": "0", "text": "       //testuje data - zakom./odkomentovat jeden nebo druhy radek, podle toho, co chci tisknout" },
                { "id": "1000", "parent": "0", "text": "       //TestData test = new TestData(MapaPismenAbeceda, 0);" },
                { "id": "1001", "parent": "0", "text": "       //TestData test = new TestData(MapaVsechPismenNaVsechRadcich, 0, 0);" },
                { "id": "1002", "parent": "0", "text": "       " },
                { "id": "1003", "parent": "0", "text": "       //test.TiskDoPng();" },
                { "id": "1004", "parent": "0", "text": "        " },
                { "id": "1005", "parent": "0", "text": "    }" },
                { "id": "1006", "parent": "0", "text": "    " }
]
